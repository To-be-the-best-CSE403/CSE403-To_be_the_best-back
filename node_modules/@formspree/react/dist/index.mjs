import{CardElement as me}from"@stripe/react-stripe-js";import D from"react";function T(e){let{prefix:t,field:s,errors:r,...i}=e;if(r==null)return null;let a=s?r.getFieldErrors(s):r.getFormErrors();return a.length===0?null:D.createElement("div",{...i},t?`${t} `:null,a.map(l=>l.message).join(", "))}import{createClient as g,getDefaultClient as C}from"@formspree/core";import{Elements as V}from"@stripe/react-stripe-js";import{loadStripe as j}from"@stripe/stripe-js/pure.js";import b,{useContext as R,useEffect as E,useMemo as w,useState as M}from"react";var v=b.createContext(null);function _(e){let{children:t,project:s,stripePK:r}=e,[i,a]=M(g({project:s})),l=w(()=>r?j(r):null,[r]);return E(()=>{let n=!0;return n&&a(o=>o.project!==s?g({...o,project:s}):o),()=>{n=!1}},[s]),E(()=>{let n=!0;return l?.then(o=>{n&&o&&a(m=>g({...m,stripe:o}))}),()=>{n=!1}},[l]),b.createElement(v.Provider,{value:{client:i}},l?b.createElement(V,{stripe:l},t):t)}function F(){return R(v)??{client:C()}}import{useState as d}from"react";import{appendExtraData as A,isSubmissionError as H}from"@formspree/core";import{CardElement as B}from"@stripe/react-stripe-js";import{useMemo as K}from"react";var P="2.5.1";var N=`@formspree/react@${P}`;function x(e,t={}){let s=F(),{client:r=s.client,extraData:i,onError:a,onSuccess:l,origin:n}=t,{stripe:o}=r,m=K(()=>o?.elements().getElement(B),[o]);return async function(p){let u=O(p)?U(p):p;if(typeof i=="object")for(let[h,y]of Object.entries(i)){let c;typeof y=="function"?c=await y():c=y,c!==void 0&&A(u,h,c)}let f=await r.submitForm(e,u,{endpoint:n,clientName:N,createPaymentMethod:o&&m?()=>o.createPaymentMethod({type:"card",card:m,billing_details:z(u)}):void 0});H(f)?a?.(f):l?.(f)}}function O(e){return"preventDefault"in e&&typeof e.preventDefault=="function"}function U(e){e.preventDefault();let t=e.currentTarget;if(t.tagName!="FORM")throw new Error("submit was triggered for a non-form element");return new FormData(t)}function z(e){let t={address:I(e)};for(let s of["name","email","phone"]){let r=e instanceof FormData?e.get(s):e[s];r&&typeof r=="string"&&(t[s]=r)}return t}function I(e){let t={};for(let[s,r]of[["address_line1","line1"],["address_line2","line2"],["address_city","city"],["address_country","country"],["address_state","state"],["address_postal_code","postal_code"]]){let i=e instanceof FormData?e.get(s):e[s];i&&typeof i=="string"&&(t[r]=i)}return t}function W(e,t={}){let[s,r]=d(null),[i,a]=d(null),[l,n]=d(!1),[o,m]=d(!1);if(!e)throw new Error('You must provide a form key or hashid (e.g. useForm("myForm") or useForm("123xyz")');let S=x(e,{client:t.client,extraData:t.data,onError(p){r(p),n(!1),m(!1)},onSuccess(p){r(null),a(p),n(!1),m(!0)},origin:t.endpoint});return[{errors:s,result:i,submitting:l,succeeded:o},async function(u){n(!0),await S(u)},function(){r(null),a(null),n(!1),m(!1)}]}export{me as CardElement,_ as FormspreeProvider,T as ValidationError,W as useForm,F as useFormspree,x as useSubmit};
